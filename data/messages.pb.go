// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages.proto

/*
Package data is a generated protocol buffer package.

It is generated from these files:
	messages.proto

It has these top-level messages:
	ChainStatus
	Account
	Payment
	PaymentsList
	SendWalletCoinsRequest
	PayInvoiceRequest
	InvoiceMemo
	Invoice
	NotificationEvent
	AddFundInitReply
	AddFundReply
	RefundRequest
	FundStatusReply
	RemoveFundRequest
	RemoveFundReply
	SwapAddressInfo
	SwapAddressList
	CreateRatchetSessionRequest
	CreateRatchetSessionReply
	RatchetSessionInfoReply
	RatchetSessionSetInfoRequest
	RatchetEncryptRequest
	RatchetDecryptRequest
	BootstrapFilesRequest
*/
package data

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Account_AccountStatus int32

const (
	Account_WAITING_DEPOSIT              Account_AccountStatus = 0
	Account_WAITING_DEPOSIT_CONFIRMATION Account_AccountStatus = 1
	Account_PROCESSING_BREEZ_CONNECTION  Account_AccountStatus = 2
	Account_PROCESSING_WITHDRAWAL        Account_AccountStatus = 3
	Account_ACTIVE                       Account_AccountStatus = 4
)

var Account_AccountStatus_name = map[int32]string{
	0: "WAITING_DEPOSIT",
	1: "WAITING_DEPOSIT_CONFIRMATION",
	2: "PROCESSING_BREEZ_CONNECTION",
	3: "PROCESSING_WITHDRAWAL",
	4: "ACTIVE",
}
var Account_AccountStatus_value = map[string]int32{
	"WAITING_DEPOSIT":              0,
	"WAITING_DEPOSIT_CONFIRMATION": 1,
	"PROCESSING_BREEZ_CONNECTION":  2,
	"PROCESSING_WITHDRAWAL":        3,
	"ACTIVE":                       4,
}

func (x Account_AccountStatus) String() string {
	return proto.EnumName(Account_AccountStatus_name, int32(x))
}
func (Account_AccountStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type Payment_PaymentType int32

const (
	Payment_DEPOSIT    Payment_PaymentType = 0
	Payment_WITHDRAWAL Payment_PaymentType = 1
	Payment_SENT       Payment_PaymentType = 2
	Payment_RECEIVED   Payment_PaymentType = 3
)

var Payment_PaymentType_name = map[int32]string{
	0: "DEPOSIT",
	1: "WITHDRAWAL",
	2: "SENT",
	3: "RECEIVED",
}
var Payment_PaymentType_value = map[string]int32{
	"DEPOSIT":    0,
	"WITHDRAWAL": 1,
	"SENT":       2,
	"RECEIVED":   3,
}

func (x Payment_PaymentType) String() string {
	return proto.EnumName(Payment_PaymentType_name, int32(x))
}
func (Payment_PaymentType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type NotificationEvent_NotificationType int32

const (
	NotificationEvent_READY                           NotificationEvent_NotificationType = 0
	NotificationEvent_INITIALIZATION_FAILED           NotificationEvent_NotificationType = 1
	NotificationEvent_ACCOUNT_CHANGED                 NotificationEvent_NotificationType = 2
	NotificationEvent_INVOICE_PAID                    NotificationEvent_NotificationType = 3
	NotificationEvent_ROUTING_NODE_CONNECTION_CHANGED NotificationEvent_NotificationType = 4
	NotificationEvent_LIGHTNING_SERVICE_DOWN          NotificationEvent_NotificationType = 5
	NotificationEvent_FUND_ADDRESS_UNSPENT_CHANGED    NotificationEvent_NotificationType = 6
	NotificationEvent_BACKUP_SUCCESS                  NotificationEvent_NotificationType = 7
	NotificationEvent_BACKUP_FAILED                   NotificationEvent_NotificationType = 8
	NotificationEvent_BACKUP_AUTH_FAILED              NotificationEvent_NotificationType = 9
	NotificationEvent_BACKUP_NODE_CONFLICT            NotificationEvent_NotificationType = 10
)

var NotificationEvent_NotificationType_name = map[int32]string{
	0:  "READY",
	1:  "INITIALIZATION_FAILED",
	2:  "ACCOUNT_CHANGED",
	3:  "INVOICE_PAID",
	4:  "ROUTING_NODE_CONNECTION_CHANGED",
	5:  "LIGHTNING_SERVICE_DOWN",
	6:  "FUND_ADDRESS_UNSPENT_CHANGED",
	7:  "BACKUP_SUCCESS",
	8:  "BACKUP_FAILED",
	9:  "BACKUP_AUTH_FAILED",
	10: "BACKUP_NODE_CONFLICT",
}
var NotificationEvent_NotificationType_value = map[string]int32{
	"READY":                           0,
	"INITIALIZATION_FAILED":           1,
	"ACCOUNT_CHANGED":                 2,
	"INVOICE_PAID":                    3,
	"ROUTING_NODE_CONNECTION_CHANGED": 4,
	"LIGHTNING_SERVICE_DOWN":          5,
	"FUND_ADDRESS_UNSPENT_CHANGED":    6,
	"BACKUP_SUCCESS":                  7,
	"BACKUP_FAILED":                   8,
	"BACKUP_AUTH_FAILED":              9,
	"BACKUP_NODE_CONFLICT":            10,
}

func (x NotificationEvent_NotificationType) String() string {
	return proto.EnumName(NotificationEvent_NotificationType_name, int32(x))
}
func (NotificationEvent_NotificationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8, 0}
}

type FundStatusReply_FundStatus int32

const (
	FundStatusReply_NO_FUND              FundStatusReply_FundStatus = 0
	FundStatusReply_WAITING_CONFIRMATION FundStatusReply_FundStatus = 1
	FundStatusReply_CONFIRMED            FundStatusReply_FundStatus = 2
)

var FundStatusReply_FundStatus_name = map[int32]string{
	0: "NO_FUND",
	1: "WAITING_CONFIRMATION",
	2: "CONFIRMED",
}
var FundStatusReply_FundStatus_value = map[string]int32{
	"NO_FUND":              0,
	"WAITING_CONFIRMATION": 1,
	"CONFIRMED":            2,
}

func (x FundStatusReply_FundStatus) String() string {
	return proto.EnumName(FundStatusReply_FundStatus_name, int32(x))
}
func (FundStatusReply_FundStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{12, 0}
}

type ChainStatus struct {
	BlockHeight   uint32 `protobuf:"varint,1,opt,name=blockHeight" json:"blockHeight,omitempty"`
	SyncedToChain bool   `protobuf:"varint,2,opt,name=syncedToChain" json:"syncedToChain,omitempty"`
}

func (m *ChainStatus) Reset()                    { *m = ChainStatus{} }
func (m *ChainStatus) String() string            { return proto.CompactTextString(m) }
func (*ChainStatus) ProtoMessage()               {}
func (*ChainStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ChainStatus) GetBlockHeight() uint32 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *ChainStatus) GetSyncedToChain() bool {
	if m != nil {
		return m.SyncedToChain
	}
	return false
}

type Account struct {
	Id            string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Balance       int64                 `protobuf:"varint,2,opt,name=balance" json:"balance,omitempty"`
	WalletBalance int64                 `protobuf:"varint,3,opt,name=walletBalance" json:"walletBalance,omitempty"`
	Status        Account_AccountStatus `protobuf:"varint,4,opt,name=status,enum=data.Account_AccountStatus" json:"status,omitempty"`
	// maximum payment this node can receive via lightning
	MaxAllowedToReceive int64 `protobuf:"varint,5,opt,name=maxAllowedToReceive" json:"maxAllowedToReceive,omitempty"`
	// maximum payment this node can pay via lightning
	MaxAllowedToPay int64 `protobuf:"varint,6,opt,name=maxAllowedToPay" json:"maxAllowedToPay,omitempty"`
	// The lightning absolute payment amount
	MaxPaymentAmount int64 `protobuf:"varint,7,opt,name=maxPaymentAmount" json:"maxPaymentAmount,omitempty"`
	// The routing node fee as reflected in the node policy
	RoutingNodeFee int64 `protobuf:"varint,8,opt,name=routingNodeFee" json:"routingNodeFee,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Account) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Account) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Account) GetWalletBalance() int64 {
	if m != nil {
		return m.WalletBalance
	}
	return 0
}

func (m *Account) GetStatus() Account_AccountStatus {
	if m != nil {
		return m.Status
	}
	return Account_WAITING_DEPOSIT
}

func (m *Account) GetMaxAllowedToReceive() int64 {
	if m != nil {
		return m.MaxAllowedToReceive
	}
	return 0
}

func (m *Account) GetMaxAllowedToPay() int64 {
	if m != nil {
		return m.MaxAllowedToPay
	}
	return 0
}

func (m *Account) GetMaxPaymentAmount() int64 {
	if m != nil {
		return m.MaxPaymentAmount
	}
	return 0
}

func (m *Account) GetRoutingNodeFee() int64 {
	if m != nil {
		return m.RoutingNodeFee
	}
	return 0
}

type Payment struct {
	Type                       Payment_PaymentType `protobuf:"varint,1,opt,name=type,enum=data.Payment_PaymentType" json:"type,omitempty"`
	Amount                     int64               `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
	CreationTimestamp          int64               `protobuf:"varint,4,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	InvoiceMemo                *InvoiceMemo        `protobuf:"bytes,6,opt,name=invoiceMemo" json:"invoiceMemo,omitempty"`
	RedeemTxID                 string              `protobuf:"bytes,7,opt,name=redeemTxID" json:"redeemTxID,omitempty"`
	PaymentHash                string              `protobuf:"bytes,8,opt,name=paymentHash" json:"paymentHash,omitempty"`
	Destination                string              `protobuf:"bytes,9,opt,name=destination" json:"destination,omitempty"`
	PendingExpirationHeight    uint32              `protobuf:"varint,10,opt,name=PendingExpirationHeight" json:"PendingExpirationHeight,omitempty"`
	PendingExpirationTimestamp int64               `protobuf:"varint,11,opt,name=PendingExpirationTimestamp" json:"PendingExpirationTimestamp,omitempty"`
	Fee                        int64               `protobuf:"varint,12,opt,name=fee" json:"fee,omitempty"`
}

func (m *Payment) Reset()                    { *m = Payment{} }
func (m *Payment) String() string            { return proto.CompactTextString(m) }
func (*Payment) ProtoMessage()               {}
func (*Payment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Payment) GetType() Payment_PaymentType {
	if m != nil {
		return m.Type
	}
	return Payment_DEPOSIT
}

func (m *Payment) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Payment) GetCreationTimestamp() int64 {
	if m != nil {
		return m.CreationTimestamp
	}
	return 0
}

func (m *Payment) GetInvoiceMemo() *InvoiceMemo {
	if m != nil {
		return m.InvoiceMemo
	}
	return nil
}

func (m *Payment) GetRedeemTxID() string {
	if m != nil {
		return m.RedeemTxID
	}
	return ""
}

func (m *Payment) GetPaymentHash() string {
	if m != nil {
		return m.PaymentHash
	}
	return ""
}

func (m *Payment) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *Payment) GetPendingExpirationHeight() uint32 {
	if m != nil {
		return m.PendingExpirationHeight
	}
	return 0
}

func (m *Payment) GetPendingExpirationTimestamp() int64 {
	if m != nil {
		return m.PendingExpirationTimestamp
	}
	return 0
}

func (m *Payment) GetFee() int64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

type PaymentsList struct {
	PaymentsList []*Payment `protobuf:"bytes,1,rep,name=paymentsList" json:"paymentsList,omitempty"`
}

func (m *PaymentsList) Reset()                    { *m = PaymentsList{} }
func (m *PaymentsList) String() string            { return proto.CompactTextString(m) }
func (*PaymentsList) ProtoMessage()               {}
func (*PaymentsList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PaymentsList) GetPaymentsList() []*Payment {
	if m != nil {
		return m.PaymentsList
	}
	return nil
}

type SendWalletCoinsRequest struct {
	Address       string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Amount        int64  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	SatPerByteFee int64  `protobuf:"varint,3,opt,name=satPerByteFee" json:"satPerByteFee,omitempty"`
}

func (m *SendWalletCoinsRequest) Reset()                    { *m = SendWalletCoinsRequest{} }
func (m *SendWalletCoinsRequest) String() string            { return proto.CompactTextString(m) }
func (*SendWalletCoinsRequest) ProtoMessage()               {}
func (*SendWalletCoinsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SendWalletCoinsRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *SendWalletCoinsRequest) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *SendWalletCoinsRequest) GetSatPerByteFee() int64 {
	if m != nil {
		return m.SatPerByteFee
	}
	return 0
}

type PayInvoiceRequest struct {
	Amount         int64  `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	PaymentRequest string `protobuf:"bytes,2,opt,name=paymentRequest" json:"paymentRequest,omitempty"`
}

func (m *PayInvoiceRequest) Reset()                    { *m = PayInvoiceRequest{} }
func (m *PayInvoiceRequest) String() string            { return proto.CompactTextString(m) }
func (*PayInvoiceRequest) ProtoMessage()               {}
func (*PayInvoiceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PayInvoiceRequest) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *PayInvoiceRequest) GetPaymentRequest() string {
	if m != nil {
		return m.PaymentRequest
	}
	return ""
}

type InvoiceMemo struct {
	Description     string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Amount          int64  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	PayeeName       string `protobuf:"bytes,3,opt,name=payeeName" json:"payeeName,omitempty"`
	PayeeImageURL   string `protobuf:"bytes,4,opt,name=payeeImageURL" json:"payeeImageURL,omitempty"`
	PayerName       string `protobuf:"bytes,5,opt,name=payerName" json:"payerName,omitempty"`
	PayerImageURL   string `protobuf:"bytes,6,opt,name=payerImageURL" json:"payerImageURL,omitempty"`
	TransferRequest bool   `protobuf:"varint,7,opt,name=transferRequest" json:"transferRequest,omitempty"`
	Expiry          int64  `protobuf:"varint,8,opt,name=expiry" json:"expiry,omitempty"`
}

func (m *InvoiceMemo) Reset()                    { *m = InvoiceMemo{} }
func (m *InvoiceMemo) String() string            { return proto.CompactTextString(m) }
func (*InvoiceMemo) ProtoMessage()               {}
func (*InvoiceMemo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *InvoiceMemo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *InvoiceMemo) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *InvoiceMemo) GetPayeeName() string {
	if m != nil {
		return m.PayeeName
	}
	return ""
}

func (m *InvoiceMemo) GetPayeeImageURL() string {
	if m != nil {
		return m.PayeeImageURL
	}
	return ""
}

func (m *InvoiceMemo) GetPayerName() string {
	if m != nil {
		return m.PayerName
	}
	return ""
}

func (m *InvoiceMemo) GetPayerImageURL() string {
	if m != nil {
		return m.PayerImageURL
	}
	return ""
}

func (m *InvoiceMemo) GetTransferRequest() bool {
	if m != nil {
		return m.TransferRequest
	}
	return false
}

func (m *InvoiceMemo) GetExpiry() int64 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

type Invoice struct {
	Memo    *InvoiceMemo `protobuf:"bytes,1,opt,name=memo" json:"memo,omitempty"`
	Settled bool         `protobuf:"varint,2,opt,name=settled" json:"settled,omitempty"`
	AmtPaid int64        `protobuf:"varint,3,opt,name=amtPaid" json:"amtPaid,omitempty"`
}

func (m *Invoice) Reset()                    { *m = Invoice{} }
func (m *Invoice) String() string            { return proto.CompactTextString(m) }
func (*Invoice) ProtoMessage()               {}
func (*Invoice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Invoice) GetMemo() *InvoiceMemo {
	if m != nil {
		return m.Memo
	}
	return nil
}

func (m *Invoice) GetSettled() bool {
	if m != nil {
		return m.Settled
	}
	return false
}

func (m *Invoice) GetAmtPaid() int64 {
	if m != nil {
		return m.AmtPaid
	}
	return 0
}

type NotificationEvent struct {
	Type NotificationEvent_NotificationType `protobuf:"varint,1,opt,name=type,enum=data.NotificationEvent_NotificationType" json:"type,omitempty"`
	Data []string                           `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
}

func (m *NotificationEvent) Reset()                    { *m = NotificationEvent{} }
func (m *NotificationEvent) String() string            { return proto.CompactTextString(m) }
func (*NotificationEvent) ProtoMessage()               {}
func (*NotificationEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *NotificationEvent) GetType() NotificationEvent_NotificationType {
	if m != nil {
		return m.Type
	}
	return NotificationEvent_READY
}

func (m *NotificationEvent) GetData() []string {
	if m != nil {
		return m.Data
	}
	return nil
}

type AddFundInitReply struct {
	Address           string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	MaxAllowedDeposit int64  `protobuf:"varint,2,opt,name=maxAllowedDeposit" json:"maxAllowedDeposit,omitempty"`
	ErrorMessage      string `protobuf:"bytes,3,opt,name=errorMessage" json:"errorMessage,omitempty"`
	BackupJson        string `protobuf:"bytes,4,opt,name=backupJson" json:"backupJson,omitempty"`
}

func (m *AddFundInitReply) Reset()                    { *m = AddFundInitReply{} }
func (m *AddFundInitReply) String() string            { return proto.CompactTextString(m) }
func (*AddFundInitReply) ProtoMessage()               {}
func (*AddFundInitReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *AddFundInitReply) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddFundInitReply) GetMaxAllowedDeposit() int64 {
	if m != nil {
		return m.MaxAllowedDeposit
	}
	return 0
}

func (m *AddFundInitReply) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *AddFundInitReply) GetBackupJson() string {
	if m != nil {
		return m.BackupJson
	}
	return ""
}

type AddFundReply struct {
	ErrorMessage string `protobuf:"bytes,1,opt,name=errorMessage" json:"errorMessage,omitempty"`
}

func (m *AddFundReply) Reset()                    { *m = AddFundReply{} }
func (m *AddFundReply) String() string            { return proto.CompactTextString(m) }
func (*AddFundReply) ProtoMessage()               {}
func (*AddFundReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *AddFundReply) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type RefundRequest struct {
	Address       string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	RefundAddress string `protobuf:"bytes,2,opt,name=refundAddress" json:"refundAddress,omitempty"`
}

func (m *RefundRequest) Reset()                    { *m = RefundRequest{} }
func (m *RefundRequest) String() string            { return proto.CompactTextString(m) }
func (*RefundRequest) ProtoMessage()               {}
func (*RefundRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *RefundRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *RefundRequest) GetRefundAddress() string {
	if m != nil {
		return m.RefundAddress
	}
	return ""
}

type FundStatusReply struct {
	Status FundStatusReply_FundStatus `protobuf:"varint,1,opt,name=status,enum=data.FundStatusReply_FundStatus" json:"status,omitempty"`
}

func (m *FundStatusReply) Reset()                    { *m = FundStatusReply{} }
func (m *FundStatusReply) String() string            { return proto.CompactTextString(m) }
func (*FundStatusReply) ProtoMessage()               {}
func (*FundStatusReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *FundStatusReply) GetStatus() FundStatusReply_FundStatus {
	if m != nil {
		return m.Status
	}
	return FundStatusReply_NO_FUND
}

type RemoveFundRequest struct {
	Address string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Amount  int64  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
}

func (m *RemoveFundRequest) Reset()                    { *m = RemoveFundRequest{} }
func (m *RemoveFundRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveFundRequest) ProtoMessage()               {}
func (*RemoveFundRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *RemoveFundRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *RemoveFundRequest) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type RemoveFundReply struct {
	Txid         string `protobuf:"bytes,1,opt,name=txid" json:"txid,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage" json:"errorMessage,omitempty"`
}

func (m *RemoveFundReply) Reset()                    { *m = RemoveFundReply{} }
func (m *RemoveFundReply) String() string            { return proto.CompactTextString(m) }
func (*RemoveFundReply) ProtoMessage()               {}
func (*RemoveFundReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *RemoveFundReply) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *RemoveFundReply) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type SwapAddressInfo struct {
	Address                 string   `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	PaymentHash             string   `protobuf:"bytes,2,opt,name=PaymentHash" json:"PaymentHash,omitempty"`
	ConfirmedAmount         int64    `protobuf:"varint,3,opt,name=ConfirmedAmount" json:"ConfirmedAmount,omitempty"`
	ConfirmedTransactionIds []string `protobuf:"bytes,4,rep,name=ConfirmedTransactionIds" json:"ConfirmedTransactionIds,omitempty"`
	PaidAmount              int64    `protobuf:"varint,5,opt,name=PaidAmount" json:"PaidAmount,omitempty"`
	LockHeight              uint32   `protobuf:"varint,6,opt,name=lockHeight" json:"lockHeight,omitempty"`
	ErrorMessage            string   `protobuf:"bytes,7,opt,name=errorMessage" json:"errorMessage,omitempty"`
	LastRefundTxID          string   `protobuf:"bytes,8,opt,name=lastRefundTxID" json:"lastRefundTxID,omitempty"`
}

func (m *SwapAddressInfo) Reset()                    { *m = SwapAddressInfo{} }
func (m *SwapAddressInfo) String() string            { return proto.CompactTextString(m) }
func (*SwapAddressInfo) ProtoMessage()               {}
func (*SwapAddressInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *SwapAddressInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *SwapAddressInfo) GetPaymentHash() string {
	if m != nil {
		return m.PaymentHash
	}
	return ""
}

func (m *SwapAddressInfo) GetConfirmedAmount() int64 {
	if m != nil {
		return m.ConfirmedAmount
	}
	return 0
}

func (m *SwapAddressInfo) GetConfirmedTransactionIds() []string {
	if m != nil {
		return m.ConfirmedTransactionIds
	}
	return nil
}

func (m *SwapAddressInfo) GetPaidAmount() int64 {
	if m != nil {
		return m.PaidAmount
	}
	return 0
}

func (m *SwapAddressInfo) GetLockHeight() uint32 {
	if m != nil {
		return m.LockHeight
	}
	return 0
}

func (m *SwapAddressInfo) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *SwapAddressInfo) GetLastRefundTxID() string {
	if m != nil {
		return m.LastRefundTxID
	}
	return ""
}

type SwapAddressList struct {
	Addresses []*SwapAddressInfo `protobuf:"bytes,1,rep,name=addresses" json:"addresses,omitempty"`
}

func (m *SwapAddressList) Reset()                    { *m = SwapAddressList{} }
func (m *SwapAddressList) String() string            { return proto.CompactTextString(m) }
func (*SwapAddressList) ProtoMessage()               {}
func (*SwapAddressList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *SwapAddressList) GetAddresses() []*SwapAddressInfo {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type CreateRatchetSessionRequest struct {
	Secret       string `protobuf:"bytes,1,opt,name=secret" json:"secret,omitempty"`
	RemotePubKey string `protobuf:"bytes,2,opt,name=remotePubKey" json:"remotePubKey,omitempty"`
	SessionID    string `protobuf:"bytes,3,opt,name=sessionID" json:"sessionID,omitempty"`
	Expiry       uint64 `protobuf:"varint,4,opt,name=expiry" json:"expiry,omitempty"`
}

func (m *CreateRatchetSessionRequest) Reset()                    { *m = CreateRatchetSessionRequest{} }
func (m *CreateRatchetSessionRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRatchetSessionRequest) ProtoMessage()               {}
func (*CreateRatchetSessionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *CreateRatchetSessionRequest) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *CreateRatchetSessionRequest) GetRemotePubKey() string {
	if m != nil {
		return m.RemotePubKey
	}
	return ""
}

func (m *CreateRatchetSessionRequest) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *CreateRatchetSessionRequest) GetExpiry() uint64 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

type CreateRatchetSessionReply struct {
	SessionID string `protobuf:"bytes,1,opt,name=sessionID" json:"sessionID,omitempty"`
	Secret    string `protobuf:"bytes,2,opt,name=secret" json:"secret,omitempty"`
	PubKey    string `protobuf:"bytes,3,opt,name=pubKey" json:"pubKey,omitempty"`
}

func (m *CreateRatchetSessionReply) Reset()                    { *m = CreateRatchetSessionReply{} }
func (m *CreateRatchetSessionReply) String() string            { return proto.CompactTextString(m) }
func (*CreateRatchetSessionReply) ProtoMessage()               {}
func (*CreateRatchetSessionReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *CreateRatchetSessionReply) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *CreateRatchetSessionReply) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *CreateRatchetSessionReply) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

type RatchetSessionInfoReply struct {
	SessionID string `protobuf:"bytes,1,opt,name=sessionID" json:"sessionID,omitempty"`
	Initiated bool   `protobuf:"varint,2,opt,name=initiated" json:"initiated,omitempty"`
	UserInfo  string `protobuf:"bytes,3,opt,name=userInfo" json:"userInfo,omitempty"`
}

func (m *RatchetSessionInfoReply) Reset()                    { *m = RatchetSessionInfoReply{} }
func (m *RatchetSessionInfoReply) String() string            { return proto.CompactTextString(m) }
func (*RatchetSessionInfoReply) ProtoMessage()               {}
func (*RatchetSessionInfoReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *RatchetSessionInfoReply) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *RatchetSessionInfoReply) GetInitiated() bool {
	if m != nil {
		return m.Initiated
	}
	return false
}

func (m *RatchetSessionInfoReply) GetUserInfo() string {
	if m != nil {
		return m.UserInfo
	}
	return ""
}

type RatchetSessionSetInfoRequest struct {
	SessionID string `protobuf:"bytes,1,opt,name=sessionID" json:"sessionID,omitempty"`
	UserInfo  string `protobuf:"bytes,2,opt,name=userInfo" json:"userInfo,omitempty"`
}

func (m *RatchetSessionSetInfoRequest) Reset()                    { *m = RatchetSessionSetInfoRequest{} }
func (m *RatchetSessionSetInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*RatchetSessionSetInfoRequest) ProtoMessage()               {}
func (*RatchetSessionSetInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *RatchetSessionSetInfoRequest) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *RatchetSessionSetInfoRequest) GetUserInfo() string {
	if m != nil {
		return m.UserInfo
	}
	return ""
}

type RatchetEncryptRequest struct {
	SessionID string `protobuf:"bytes,1,opt,name=sessionID" json:"sessionID,omitempty"`
	Message   string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *RatchetEncryptRequest) Reset()                    { *m = RatchetEncryptRequest{} }
func (m *RatchetEncryptRequest) String() string            { return proto.CompactTextString(m) }
func (*RatchetEncryptRequest) ProtoMessage()               {}
func (*RatchetEncryptRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *RatchetEncryptRequest) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *RatchetEncryptRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type RatchetDecryptRequest struct {
	SessionID        string `protobuf:"bytes,1,opt,name=sessionID" json:"sessionID,omitempty"`
	EncryptedMessage string `protobuf:"bytes,2,opt,name=encryptedMessage" json:"encryptedMessage,omitempty"`
}

func (m *RatchetDecryptRequest) Reset()                    { *m = RatchetDecryptRequest{} }
func (m *RatchetDecryptRequest) String() string            { return proto.CompactTextString(m) }
func (*RatchetDecryptRequest) ProtoMessage()               {}
func (*RatchetDecryptRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *RatchetDecryptRequest) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *RatchetDecryptRequest) GetEncryptedMessage() string {
	if m != nil {
		return m.EncryptedMessage
	}
	return ""
}

type BootstrapFilesRequest struct {
	WorkingDir string   `protobuf:"bytes,1,opt,name=WorkingDir" json:"WorkingDir,omitempty"`
	FullPaths  []string `protobuf:"bytes,2,rep,name=FullPaths" json:"FullPaths,omitempty"`
}

func (m *BootstrapFilesRequest) Reset()                    { *m = BootstrapFilesRequest{} }
func (m *BootstrapFilesRequest) String() string            { return proto.CompactTextString(m) }
func (*BootstrapFilesRequest) ProtoMessage()               {}
func (*BootstrapFilesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *BootstrapFilesRequest) GetWorkingDir() string {
	if m != nil {
		return m.WorkingDir
	}
	return ""
}

func (m *BootstrapFilesRequest) GetFullPaths() []string {
	if m != nil {
		return m.FullPaths
	}
	return nil
}

func init() {
	proto.RegisterType((*ChainStatus)(nil), "data.ChainStatus")
	proto.RegisterType((*Account)(nil), "data.Account")
	proto.RegisterType((*Payment)(nil), "data.Payment")
	proto.RegisterType((*PaymentsList)(nil), "data.PaymentsList")
	proto.RegisterType((*SendWalletCoinsRequest)(nil), "data.SendWalletCoinsRequest")
	proto.RegisterType((*PayInvoiceRequest)(nil), "data.PayInvoiceRequest")
	proto.RegisterType((*InvoiceMemo)(nil), "data.InvoiceMemo")
	proto.RegisterType((*Invoice)(nil), "data.Invoice")
	proto.RegisterType((*NotificationEvent)(nil), "data.NotificationEvent")
	proto.RegisterType((*AddFundInitReply)(nil), "data.AddFundInitReply")
	proto.RegisterType((*AddFundReply)(nil), "data.AddFundReply")
	proto.RegisterType((*RefundRequest)(nil), "data.RefundRequest")
	proto.RegisterType((*FundStatusReply)(nil), "data.FundStatusReply")
	proto.RegisterType((*RemoveFundRequest)(nil), "data.RemoveFundRequest")
	proto.RegisterType((*RemoveFundReply)(nil), "data.RemoveFundReply")
	proto.RegisterType((*SwapAddressInfo)(nil), "data.SwapAddressInfo")
	proto.RegisterType((*SwapAddressList)(nil), "data.SwapAddressList")
	proto.RegisterType((*CreateRatchetSessionRequest)(nil), "data.CreateRatchetSessionRequest")
	proto.RegisterType((*CreateRatchetSessionReply)(nil), "data.CreateRatchetSessionReply")
	proto.RegisterType((*RatchetSessionInfoReply)(nil), "data.RatchetSessionInfoReply")
	proto.RegisterType((*RatchetSessionSetInfoRequest)(nil), "data.RatchetSessionSetInfoRequest")
	proto.RegisterType((*RatchetEncryptRequest)(nil), "data.RatchetEncryptRequest")
	proto.RegisterType((*RatchetDecryptRequest)(nil), "data.RatchetDecryptRequest")
	proto.RegisterType((*BootstrapFilesRequest)(nil), "data.BootstrapFilesRequest")
	proto.RegisterEnum("data.Account_AccountStatus", Account_AccountStatus_name, Account_AccountStatus_value)
	proto.RegisterEnum("data.Payment_PaymentType", Payment_PaymentType_name, Payment_PaymentType_value)
	proto.RegisterEnum("data.NotificationEvent_NotificationType", NotificationEvent_NotificationType_name, NotificationEvent_NotificationType_value)
	proto.RegisterEnum("data.FundStatusReply_FundStatus", FundStatusReply_FundStatus_name, FundStatusReply_FundStatus_value)
}

func init() { proto.RegisterFile("messages.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1566 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x57, 0xdd, 0x6e, 0xdb, 0xca,
	0x11, 0x0e, 0x25, 0x59, 0xb2, 0x46, 0x96, 0x4c, 0xef, 0xa9, 0x7d, 0x94, 0xc4, 0x38, 0x47, 0x60,
	0xd3, 0xc0, 0x08, 0xd2, 0xa0, 0xb5, 0x6f, 0x72, 0x51, 0x14, 0xa0, 0x49, 0x2a, 0x66, 0xe3, 0x50,
	0xc2, 0x8a, 0xb2, 0xdb, 0xdc, 0x08, 0x6b, 0x71, 0x6d, 0x13, 0x11, 0x7f, 0x42, 0xae, 0x1c, 0xeb,
	0xba, 0xf7, 0x2d, 0x7a, 0x5d, 0xa0, 0x6f, 0xd2, 0x67, 0xe8, 0x63, 0xf4, 0x35, 0x8a, 0x5d, 0x2e,
	0x25, 0x52, 0xb2, 0xdd, 0x9c, 0x2b, 0x6b, 0xbf, 0x1d, 0x7e, 0x33, 0x3b, 0x3b, 0xf3, 0xcd, 0x1a,
	0x3a, 0x01, 0x4d, 0x53, 0x72, 0x43, 0xd3, 0x77, 0x71, 0x12, 0xb1, 0x08, 0xd5, 0x3c, 0xc2, 0x88,
	0x36, 0x86, 0x96, 0x71, 0x4b, 0xfc, 0x70, 0xc4, 0x08, 0x9b, 0xa7, 0xa8, 0x07, 0xad, 0xab, 0x59,
	0x34, 0xfd, 0x72, 0x46, 0xfd, 0x9b, 0x5b, 0xd6, 0x55, 0x7a, 0xca, 0x51, 0x1b, 0x17, 0x21, 0xf4,
	0x0a, 0xda, 0xe9, 0x22, 0x9c, 0x52, 0xcf, 0x8d, 0xc4, 0x87, 0xdd, 0x4a, 0x4f, 0x39, 0xda, 0xc6,
	0x65, 0x50, 0xfb, 0x4f, 0x15, 0x1a, 0xfa, 0x74, 0x1a, 0xcd, 0x43, 0x86, 0x3a, 0x50, 0xf1, 0x3d,
	0x41, 0xd5, 0xc4, 0x15, 0xdf, 0x43, 0x5d, 0x68, 0x5c, 0x91, 0x19, 0x09, 0xa7, 0x54, 0x7c, 0x5b,
	0xc5, 0xf9, 0x92, 0x73, 0x7f, 0x23, 0xb3, 0x19, 0x65, 0xa7, 0x72, 0xbf, 0x2a, 0xf6, 0xcb, 0x20,
	0x3a, 0x81, 0x7a, 0x2a, 0xa2, 0xed, 0xd6, 0x7a, 0xca, 0x51, 0xe7, 0xf8, 0xe5, 0x3b, 0x7e, 0x92,
	0x77, 0xd2, 0x5d, 0xfe, 0x37, 0x3b, 0x10, 0x96, 0xa6, 0xe8, 0x77, 0xf0, 0x43, 0x40, 0xee, 0xf5,
	0xd9, 0x2c, 0xfa, 0xc6, 0xa3, 0xc4, 0x74, 0x4a, 0xfd, 0x3b, 0xda, 0xdd, 0x12, 0x0e, 0x1e, 0xda,
	0x42, 0x47, 0xb0, 0x5b, 0x84, 0x87, 0x64, 0xd1, 0xad, 0x0b, 0xeb, 0x75, 0x18, 0xbd, 0x01, 0x35,
	0x20, 0xf7, 0x43, 0xb2, 0x08, 0x68, 0xc8, 0xf4, 0x80, 0x7b, 0xef, 0x36, 0x84, 0xe9, 0x06, 0x8e,
	0x5e, 0x43, 0x27, 0x89, 0xe6, 0xcc, 0x0f, 0x6f, 0x9c, 0xc8, 0xa3, 0x7d, 0x4a, 0xbb, 0xdb, 0xc2,
	0x72, 0x0d, 0xd5, 0xfe, 0xa6, 0x40, 0xbb, 0x74, 0x12, 0xf4, 0x03, 0xec, 0x5e, 0xea, 0xb6, 0x6b,
	0x3b, 0x1f, 0x26, 0xa6, 0x35, 0x1c, 0x8c, 0x6c, 0x57, 0x7d, 0x86, 0x7a, 0x70, 0xb8, 0x06, 0x4e,
	0x8c, 0x81, 0xd3, 0xb7, 0xf1, 0x27, 0xdd, 0xb5, 0x07, 0x8e, 0xaa, 0xa0, 0x9f, 0xe1, 0xe5, 0x10,
	0x0f, 0x0c, 0x6b, 0x34, 0xe2, 0x46, 0xa7, 0xd8, 0xb2, 0x3e, 0x73, 0x13, 0xc7, 0x32, 0x84, 0x41,
	0x05, 0x3d, 0x87, 0xfd, 0x82, 0xc1, 0xa5, 0xed, 0x9e, 0x99, 0x58, 0xbf, 0xd4, 0xcf, 0xd5, 0x2a,
	0x02, 0xa8, 0xeb, 0x86, 0x6b, 0x5f, 0x58, 0x6a, 0x4d, 0xfb, 0x6f, 0x15, 0x1a, 0xf2, 0x28, 0xe8,
	0xb7, 0x50, 0x63, 0x8b, 0x98, 0x8a, 0x3b, 0xed, 0x1c, 0x3f, 0xcf, 0xf2, 0x2f, 0x37, 0xf3, 0xbf,
	0xee, 0x22, 0xa6, 0x58, 0x98, 0xa1, 0x03, 0xa8, 0x93, 0x2c, 0x2b, 0xd9, 0x7d, 0xca, 0x15, 0x7a,
	0x0b, 0x7b, 0xd3, 0x84, 0x12, 0xe6, 0x47, 0xa1, 0xeb, 0x07, 0x34, 0x65, 0x24, 0x88, 0xc5, 0x9d,
	0x56, 0xf1, 0xe6, 0x06, 0x3a, 0x81, 0x96, 0x1f, 0xde, 0x45, 0xfe, 0x94, 0x7e, 0xa2, 0x41, 0x24,
	0xee, 0xa2, 0x75, 0xbc, 0x97, 0xf9, 0xb6, 0x57, 0x1b, 0xb8, 0x68, 0x85, 0x7e, 0x02, 0x48, 0xa8,
	0x47, 0x69, 0xe0, 0xde, 0xdb, 0xa6, 0xb8, 0x94, 0x26, 0x2e, 0x20, 0xbc, 0xde, 0xe3, 0x2c, 0xde,
	0x33, 0x92, 0xde, 0x8a, 0xbb, 0x68, 0xe2, 0x22, 0xc4, 0x2d, 0x3c, 0x9a, 0x32, 0x3f, 0x14, 0xe1,
	0x74, 0x9b, 0x99, 0x45, 0x01, 0x42, 0xef, 0xe1, 0xc7, 0x21, 0x0d, 0x3d, 0x3f, 0xbc, 0xb1, 0xee,
	0x63, 0x3f, 0x11, 0xa0, 0xec, 0x1f, 0x10, 0xfd, 0xf3, 0xd8, 0x36, 0xfa, 0x23, 0xbc, 0xd8, 0xd8,
	0x5a, 0x65, 0xa2, 0x25, 0x32, 0xf1, 0x84, 0x05, 0x52, 0xa1, 0x7a, 0x4d, 0x69, 0x77, 0x47, 0x18,
	0xf2, 0x9f, 0xda, 0x29, 0xb4, 0x0a, 0xf9, 0x47, 0x2d, 0x68, 0xac, 0x6a, 0xa5, 0x03, 0x50, 0xb8,
	0x5d, 0x05, 0x6d, 0x43, 0x6d, 0x64, 0x39, 0xae, 0x5a, 0x41, 0x3b, 0xb0, 0x8d, 0x2d, 0xc3, 0xb2,
	0x2f, 0x2c, 0x53, 0xad, 0x6a, 0x3a, 0xec, 0x48, 0x8e, 0xf4, 0xdc, 0x4f, 0x19, 0xfa, 0x3d, 0xec,
	0xc4, 0x85, 0x75, 0x57, 0xe9, 0x55, 0x8f, 0x5a, 0xc7, 0xed, 0xd2, 0xad, 0xe3, 0x92, 0x89, 0x16,
	0xc3, 0xc1, 0x88, 0x86, 0xde, 0xa5, 0xe8, 0x5b, 0x23, 0xf2, 0xc3, 0x14, 0xd3, 0xaf, 0x73, 0x9a,
	0x32, 0xde, 0xfc, 0xc4, 0xf3, 0x12, 0x9a, 0xa6, 0x52, 0x11, 0xf2, 0x65, 0xa1, 0x4a, 0x2a, 0xa5,
	0x2a, 0xe1, 0x82, 0x43, 0xd8, 0x90, 0x26, 0xa7, 0x0b, 0x26, 0x1a, 0x46, 0x8a, 0x42, 0x09, 0xd4,
	0x46, 0xb0, 0x37, 0x24, 0x0b, 0x59, 0x07, 0xb9, 0xb3, 0x15, 0xa5, 0x52, 0xa2, 0x7c, 0x0d, 0x1d,
	0x19, 0xae, 0xb4, 0x14, 0x2e, 0x9b, 0x78, 0x0d, 0xd5, 0xfe, 0x51, 0x81, 0x56, 0xa1, 0xb4, 0x64,
	0x2d, 0x4c, 0x13, 0x3f, 0x16, 0xb5, 0xa0, 0x2c, 0x6b, 0x21, 0x87, 0x1e, 0x3d, 0xc4, 0x21, 0x34,
	0x63, 0xb2, 0xa0, 0xd4, 0x21, 0x41, 0x76, 0x80, 0x26, 0x5e, 0x01, 0xfc, 0x88, 0x62, 0x61, 0x07,
	0xe4, 0x86, 0x8e, 0xf1, 0xb9, 0x68, 0x82, 0x26, 0x2e, 0x83, 0x39, 0x47, 0x22, 0x38, 0xb6, 0x56,
	0x1c, 0x49, 0x91, 0x23, 0x59, 0x72, 0xd4, 0x57, 0x1c, 0x4b, 0x90, 0x8b, 0x1a, 0x4b, 0x48, 0x98,
	0x5e, 0xd3, 0x24, 0x3f, 0x7a, 0x43, 0xe8, 0xf7, 0x3a, 0xcc, 0x4f, 0x42, 0x79, 0xc9, 0x2d, 0xa4,
	0x40, 0xc9, 0x95, 0xe6, 0x41, 0x43, 0xa6, 0x04, 0xfd, 0x06, 0x6a, 0x01, 0x6f, 0x45, 0xe5, 0xb1,
	0x56, 0x14, 0xdb, 0xfc, 0xca, 0x53, 0xca, 0xd8, 0x8c, 0x7a, 0x72, 0x56, 0xe4, 0x4b, 0x51, 0x0c,
	0x01, 0x1b, 0x12, 0xdf, 0x93, 0x97, 0x9a, 0x2f, 0xb5, 0xbf, 0x56, 0x61, 0xcf, 0x89, 0x98, 0x7f,
	0xed, 0x4f, 0x45, 0xcd, 0x5b, 0x77, 0x5c, 0x77, 0xfe, 0x50, 0xd2, 0x9d, 0xa3, 0xcc, 0xe1, 0x86,
	0x59, 0x09, 0x29, 0xc8, 0x10, 0x02, 0x31, 0xf2, 0xba, 0x95, 0x5e, 0xf5, 0xa8, 0x89, 0xb3, 0xf1,
	0xf7, 0xcf, 0x0a, 0xa8, 0xeb, 0xe6, 0xa8, 0x09, 0x5b, 0xd8, 0xd2, 0xcd, 0xbf, 0xa8, 0xcf, 0xb8,
	0x38, 0xda, 0x8e, 0xed, 0xda, 0xfa, 0xb9, 0xfd, 0x59, 0x28, 0xea, 0xa4, 0xaf, 0xdb, 0xe7, 0x96,
	0xa9, 0x2a, 0x5c, 0x8f, 0x75, 0xc3, 0x18, 0x8c, 0x1d, 0x77, 0x62, 0x9c, 0xe9, 0xce, 0x07, 0xcb,
	0x54, 0x2b, 0x48, 0x85, 0x1d, 0xdb, 0xb9, 0x18, 0xd8, 0x86, 0x35, 0x19, 0xea, 0xb6, 0xa9, 0x56,
	0xd1, 0xaf, 0xe1, 0x67, 0x3c, 0x18, 0x0b, 0x85, 0x76, 0x06, 0xa6, 0x55, 0xd0, 0xde, 0xe5, 0x67,
	0x35, 0xf4, 0x02, 0x0e, 0xce, 0xed, 0x0f, 0x67, 0xae, 0xc3, 0xcd, 0x46, 0x16, 0xbe, 0xe0, 0x04,
	0xe6, 0xe0, 0xd2, 0x51, 0xb7, 0xb8, 0xc4, 0xf7, 0xc7, 0x8e, 0x39, 0xd1, 0x4d, 0x13, 0x5b, 0xa3,
	0xd1, 0x64, 0xec, 0x8c, 0x86, 0x56, 0xc1, 0x69, 0x1d, 0x21, 0xe8, 0x9c, 0xea, 0xc6, 0xc7, 0xf1,
	0x70, 0x32, 0x1a, 0x1b, 0x5c, 0xc8, 0xd5, 0x06, 0xda, 0x83, 0xb6, 0xc4, 0x64, 0xc0, 0xdb, 0xe8,
	0x00, 0x90, 0x84, 0xf4, 0xb1, 0x7b, 0x96, 0xe3, 0x4d, 0xd4, 0x85, 0x5f, 0x49, 0x3c, 0x0f, 0xb0,
	0x7f, 0x6e, 0x1b, 0xae, 0x0a, 0xda, 0xbf, 0x14, 0x50, 0x75, 0xcf, 0xeb, 0xcf, 0x43, 0xcf, 0x0e,
	0x7d, 0x86, 0x69, 0x3c, 0x5b, 0x3c, 0xd1, 0xc1, 0x6f, 0x61, 0x6f, 0x35, 0x1a, 0x4d, 0x1a, 0x47,
	0xa9, 0x9f, 0xf7, 0xc1, 0xe6, 0x06, 0xd2, 0x60, 0x87, 0x26, 0x49, 0x94, 0x7c, 0xca, 0x9e, 0x25,
	0xb2, 0x2b, 0x4a, 0x18, 0x97, 0xef, 0x2b, 0x32, 0xfd, 0x32, 0x8f, 0xff, 0x94, 0x46, 0xa1, 0xec,
	0x8a, 0x02, 0xa2, 0x1d, 0xc3, 0x8e, 0x8c, 0x2f, 0x8b, 0x6d, 0x9d, 0x53, 0xd9, 0xe4, 0xd4, 0x06,
	0xd0, 0xc6, 0xf4, 0x5a, 0x7c, 0xf2, 0xff, 0x24, 0xe9, 0x15, 0xb4, 0x13, 0x61, 0xaa, 0xcb, 0xfd,
	0x4c, 0x26, 0xca, 0xa0, 0xf6, 0x77, 0x05, 0x76, 0x79, 0x08, 0xf2, 0xc5, 0x21, 0x02, 0x79, 0xbf,
	0x7c, 0xa3, 0x64, 0xb5, 0xda, 0xcb, 0x6a, 0x75, 0xcd, 0xac, 0xb8, 0x96, 0xf6, 0xda, 0x29, 0xc0,
	0x0a, 0xe5, 0x02, 0xee, 0x0c, 0x26, 0xfc, 0xfe, 0xd5, 0x67, 0xfc, 0xa2, 0xf2, 0x61, 0xbf, 0x36,
	0xe4, 0xdb, 0xd0, 0x94, 0x08, 0xaf, 0x42, 0xcd, 0x82, 0x3d, 0x4c, 0x83, 0xe8, 0x8e, 0xf6, 0xbf,
	0xeb, 0x98, 0x8f, 0x88, 0x96, 0x66, 0xc3, 0x6e, 0x91, 0x86, 0x9f, 0x0b, 0x41, 0x8d, 0xdd, 0x2f,
	0x5f, 0x73, 0xe2, 0xf7, 0x46, 0xd2, 0x2b, 0x0f, 0x24, 0xfd, 0xdf, 0x15, 0xd8, 0x1d, 0x7d, 0x23,
	0xb1, 0xcc, 0x99, 0x1d, 0x5e, 0x47, 0x4f, 0x04, 0xd4, 0x5b, 0x4e, 0x31, 0x31, 0x95, 0x33, 0xc2,
	0x22, 0xc4, 0x75, 0xcc, 0x88, 0xc2, 0x6b, 0x3f, 0x09, 0xa8, 0xa7, 0x17, 0xdf, 0x16, 0xeb, 0x30,
	0x9f, 0xce, 0x4b, 0xc8, 0xe5, 0x1a, 0x47, 0xa6, 0xbc, 0xd1, 0x6d, 0x8f, 0x3f, 0x1f, 0xb9, 0x10,
	0x3c, 0xb6, 0xcd, 0x8b, 0x8f, 0x6b, 0x91, 0xa4, 0xcf, 0x5e, 0x8a, 0x05, 0x84, 0xef, 0x17, 0x9e,
	0xca, 0x75, 0x31, 0xea, 0x0b, 0xc8, 0x46, 0x5e, 0x1a, 0x0f, 0x14, 0xf8, 0x6b, 0xe8, 0xcc, 0x48,
	0xca, 0xb2, 0x82, 0x14, 0x6f, 0x94, 0xec, 0x09, 0xb2, 0x86, 0x6a, 0xfd, 0x52, 0xfa, 0xc4, 0x58,
	0x3e, 0x81, 0xa6, 0xcc, 0x17, 0x4d, 0xe5, 0x4c, 0xde, 0xcf, 0xaa, 0x6c, 0x2d, 0xd1, 0x78, 0x65,
	0xc7, 0x6b, 0xf5, 0xa5, 0xc1, 0x9f, 0x56, 0x14, 0x13, 0x36, 0xbd, 0xa5, 0x6c, 0x44, 0xd3, 0xd4,
	0x8f, 0xc2, 0x82, 0xea, 0xa7, 0x74, 0x9a, 0x50, 0x26, 0xaf, 0x44, 0xae, 0xf8, 0x59, 0x12, 0x1a,
	0x44, 0x8c, 0x0e, 0xe7, 0x57, 0x1f, 0xe9, 0x22, 0xbf, 0xe3, 0x22, 0xc6, 0xe7, 0x53, 0x9a, 0xb1,
	0xd9, 0x66, 0x3e, 0xe3, 0x96, 0x40, 0x61, 0x9e, 0xf0, 0x36, 0xae, 0x2d, 0xe7, 0x89, 0x0f, 0xcf,
	0x1f, 0x0e, 0x88, 0x97, 0x5b, 0x89, 0x52, 0x79, 0x80, 0x52, 0x06, 0x5b, 0x29, 0x05, 0x7b, 0x00,
	0xf5, 0x38, 0x0b, 0x33, 0x8b, 0x42, 0xae, 0xb4, 0xaf, 0xf0, 0x63, 0xd9, 0x89, 0xc8, 0xce, 0x77,
	0x38, 0x3a, 0x84, 0xa6, 0x1f, 0xfa, 0xcc, 0x27, 0x6c, 0x39, 0xc3, 0x56, 0x00, 0x7a, 0x01, 0xdb,
	0xf3, 0x94, 0x26, 0x9c, 0x4c, 0x3a, 0x5c, 0xae, 0xb5, 0x3f, 0xc3, 0x61, 0xd9, 0xe5, 0x88, 0xb2,
	0xcc, 0x6b, 0x96, 0xef, 0xa7, 0xfd, 0x16, 0x99, 0x2b, 0x6b, 0xcc, 0x03, 0xd8, 0x97, 0xcc, 0x56,
	0x38, 0x4d, 0x16, 0x31, 0xfb, 0x3e, 0xca, 0x2e, 0x34, 0x82, 0x52, 0x9f, 0xe6, 0x4b, 0x8d, 0x2c,
	0x09, 0x4d, 0xfa, 0x0b, 0x08, 0xdf, 0x80, 0x4a, 0xb3, 0x00, 0xa8, 0x57, 0x56, 0x80, 0x0d, 0x5c,
	0x1b, 0xc3, 0xfe, 0x69, 0x14, 0xb1, 0x94, 0x25, 0x24, 0xee, 0xfb, 0x33, 0xba, 0x7c, 0x15, 0xfe,
	0x04, 0x70, 0x19, 0x25, 0x5f, 0xfc, 0xf0, 0xc6, 0xf4, 0x13, 0xe9, 0xa3, 0x80, 0xf0, 0x10, 0xfa,
	0xf3, 0xd9, 0x6c, 0x48, 0xd8, 0x6d, 0x2a, 0xe7, 0xf7, 0x0a, 0xb8, 0xaa, 0x8b, 0x7f, 0x68, 0x4f,
	0xfe, 0x17, 0x00, 0x00, 0xff, 0xff, 0x10, 0x11, 0x1f, 0x4f, 0xe2, 0x0e, 0x00, 0x00,
}
