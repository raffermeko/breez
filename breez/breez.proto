syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.breez.service";
option java_outer_classname = "BreezProto";

package breez;

service Information {
  rpc Ping (PingRequest) returns (PingReply) {}
}

service MempoolNotifier {
  rpc MempoolRegister (MempoolRegisterRequest) returns (MempoolRegisterReply) {}
}

service FundManager {
    rpc OpenChannel (OpenChannelRequest) returns (OpenChannelReply) {}
    rpc UpdateChannelPolicy (UpdateChannelPolicyRequest) returns (UpdateChannelPolicyReply) {}
    rpc AddFundInit (AddFundInitRequest) returns (AddFundInitReply) {}
    rpc AddFundStatus (AddFundStatusRequest) returns (AddFundStatusReply) {}
    rpc RemoveFund (RemoveFundRequest) returns (RemoveFundReply) {}
    rpc RedeemRemovedFunds (RedeemRemovedFundsRequest) returns (RedeemRemovedFundsReply) {}
    rpc GetSwapPayment (GetSwapPaymentRequest) returns (GetSwapPaymentReply) {}
    rpc RegisterTransactionConfirmation(RegisterTransactionConfirmationRequest) returns (RegisterTransactionConfirmationResponse) {}
}

service SyncNotifier {
  rpc RegisterPeriodicSync(RegisterPeriodicSyncRequest) returns (RegisterPeriodicSyncResponse) {}
}

message OpenChannelRequest {
   string pubKey = 1;
   string notificationToken = 2;
}

message OpenChannelReply {}

message UpdateChannelPolicyRequest {
    string pubKey = 1;
}

message UpdateChannelPolicyReply {}

message AddFundInitRequest {
    string nodeID = 1;
    string notificationToken = 2;
    bytes pubkey = 3;
    bytes hash = 4;
}

message AddFundInitReply {
    string address = 1;
    bytes pubkey = 2;
    int64 lockHeight = 3;
    int64 maxAllowedDeposit = 4;
    string errorMessage = 5;
    int64 requiredReserve = 6;
}

message AddFundStatusRequest {
    repeated string addresses = 1;
    string notificationToken = 2;
}

message AddFundStatusReply {
    message AddressStatus {
        string tx = 1;
        int64 amount = 2;
        bool confirmed = 3;
        string blockHash = 4;
    }
    map<string, AddressStatus> statuses = 1;
}

message RemoveFundRequest {
  string address = 1;
  int64 amount = 2;  
}

message RemoveFundReply {
  string paymentRequest = 1;
  string errorMessage = 2;
}

message RedeemRemovedFundsRequest {
  string paymenthash = 1;
}

message RedeemRemovedFundsReply {
  string txid = 1;
}

message GetSwapPaymentRequest {
  string paymentRequest = 1;
}

message GetSwapPaymentReply {
  string paymentError = 1;
  bool FundsExceededLimit = 2;
}

message MempoolRegisterRequest {
  string clientID = 1;
  repeated string addresses = 2;
}

message MempoolRegisterReply {
  message Transaction {
      string TX = 1;
      string Address = 2;
      double Value = 3;
  }
  repeated Transaction TXS = 1;
}

message RegisterTransactionConfirmationRequest {
  enum NotificationType {
    READY_RECEIVE_PAYMENT = 0;   
    CHANNEL_OPENED = 1; 
  }

  string txID = 1;
  string notificationToken = 2; 
  NotificationType notificationType = 3;
}

message RegisterTransactionConfirmationResponse {}

message PingRequest {
}

message PingReply {
  string version = 1;
}

message RegisterPeriodicSyncRequest {
  string notificationToken = 1;
}

message RegisterPeriodicSyncResponse {}